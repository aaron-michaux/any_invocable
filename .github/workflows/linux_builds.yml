name: Linux builds

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx:
        - g++-7
        - g++-8
        - g++-9
        - g++-10
        - clang++-6.0
        - clang++-7
        - clang++-8
        - clang++-9
        - clang++-10
        build_type: [opt, fastbuild]
        include:
        - cxx: g++-7
          other_pkgs: g++-7
        - cxx: g++-8
          other_pkgs: g++-8
        - cxx: g++-9
          other_pkgs: g++-9
        - cxx: g++-10
          other_pkgs: g++-10
        - cxx: clang++-6.0
          other_pkgs: clang-6.0
        - cxx: clang++-7
          other_pkgs: clang-7
        - cxx: clang++-8
          other_pkgs: clang-8
        - cxx: clang++-9
          other_pkgs: clang-9
        - cxx: clang++-10
          other_pkgs: clang-10

    steps:
    - uses: actions/checkout@v2

    - name: Prepare environment
      run: sudo apt-get install -y ${{matrix.other_pkgs}}

    - uses: bazelbuild/setup-bazelisk@v1

    - name: Mount bazel cache
      uses: actions/cache@v2
      with:
        path: "~/.cache/bazel"
        key: bazel-linux-${{matrix.cxx}}-${{matrix.build_type}}

    - name: Bazel build and test
      run: bazel
        --noworkspace_rc
        --bazelrc=bazel_rc/sanitizers.rc
        test //... -s
        -c ${{matrix.build_type}}
        --copt=-Werror
        --copt=-std=c++17
        --action_env=CC=${{matrix.cxx}}
